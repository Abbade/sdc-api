// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  //provider = "sqlite"
  //url      = "file:./dev.db"
}

model Users {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String

  clones Clones[]

  @@map("users")
}





// PARAMS
model Profiles {
  id          Int    @id @default(autoincrement())
  name        String
  description String

  genetics Genetics[]

  @@map("profiles")
}

model Genetics {
  id   Int    @id @default(autoincrement())
  name String
  nick String
  description String

  created_at DateTime @default(now())


  id_profile       Int
  profile Profiles @relation(fields: [id_profile], references: [id])

  lotes Lotes[]

  @@map("genetics")
}

model Sections {

  id   Int    @id @default(autoincrement())
  name String
  description String

  
  locations Locations[]


  created_at DateTime @default(now())

  @@map("section")


}

model Locations {

  id   Int    @id @default(autoincrement())
  name String
  description String


  id_section       Int
  section Sections @relation(fields: [id_section], references: [id])


  created_at DateTime @default(now())

  lotes Lotes[]


  @@map("location")

}

model PropagationType {
  id Int @id @default(autoincrement())

  created_at DateTime @default(now())

  name String @unique
  description String

  lotes Lotes[]
  
@@map("propagationType")
  
}

model TrashReasons {
  id Int @id @default(autoincrement())

    created_at DateTime @default(now())

  name String @unique
  description String

  trashedLotes TrashedLotes[]
  
@@map("trashReason")
  
}



model Lotes {
  id Int @id @default(autoincrement())

  name String @unique

  obs String

  propDate DateTime

  created_at DateTime @default(now())

  id_propagationType Int
  propagationType     PropagationType @relation(fields: [id_propagationType], references: [id])
 

  id_genetic Int
  genetic     Genetics @relation(fields: [id_genetic], references: [id])

  id_location_init Int
  location     Locations @relation(fields: [id_location_init], references: [id])

  qtTotal Int
  qtProp Int 
  qtPropTrashed Int @default(0)
  qtPlant Int @default(0)

  descartes TrashedLotes[]

  @@map("lotes")
}



model TrashedLotes {

  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  
  obs String?

  id_lote Int
  lote     Lotes @relation(fields: [id_lote], references: [id])

  id_trashReason Int
  trashReason     TrashReasons @relation(fields: [id_trashReason], references: [id])

  trashDate DateTime

  qtPropTrashed Int
  massTrashed Float @default(0)


  @@map("trashedLotes")

}




model Clones {
  id Int @id @default(autoincrement())

  name String

  created_at DateTime @default(now())

  id_user_create Int
  userCreate     Users @relation(fields: [id_user_create], references: [id])

  total_clones Int

  @@map("clones")
}
